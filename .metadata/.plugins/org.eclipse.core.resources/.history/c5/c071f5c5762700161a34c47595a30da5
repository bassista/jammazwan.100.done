package jammazwan.util;

public class SleepUntilSeemsIdle {
	public static work(){
		long maxMemory = 10;
		long currentMemory = Runtime.getRuntime().maxMemory();
		while(maxMemory/currentMemory<4){
			maxMemory=getMaxMemory(maxMemory);
			return;
		}
	}

	private static long getMaxMemory(long previousMaxMemory) {
		Runtime runtime = Runtime.getRuntime();
		long maxMemory = runtime.maxMemory();
		long allocatedMemory = runtime.totalMemory();
		long freeMemory = runtime.freeMemory();
		System.out.println(" " + maxMemory + " " + allocatedMemory + " " + freeMemory);
		if (maxMemory > previousMaxMemory) {
			return maxMemory;
		} else {
			return previousMaxMemory;
		}
	}

	private static void sleep() {
		try {
			Thread.sleep(100);
		} catch (InterruptedException e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		}
	}
}
