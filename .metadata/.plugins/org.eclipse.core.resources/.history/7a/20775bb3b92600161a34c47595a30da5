package jammazwan;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.jackson.JacksonDataFormat;
import org.apache.camel.component.jackson.ListJacksonDataFormat;
import org.apache.camel.model.DataFormatDefinition;
import org.apache.camel.model.language.JsonPathExpression;

import jammazwan.entity.XmplProject;

public class UnMarshalExampleProjects extends RouteBuilder {
	JsonPathExpression jsonPathExpression = new JsonPathExpression("$[*]");
	List<XmplProject> exampleProjects = new ArrayList<XmplProject>();

	@Override
	public void configure() throws Exception {
		from("file://src/main/resources?noop=true&fileName=xyzprojects.json").split(jsonPathExpression)
				.process(new Processor() {
					@Override
					public void process(Exchange exchange) throws Exception {
						/*
						 * No way I am believing that I have to do this. Never
						 * cease to be amazed how odd working with Camel can be
						 */
						Map contents = exchange.getIn().getBody(Map.class);
						System.err.println("WHAT IS " + contents);
						XmplProject xmplProject = new XmplProject("" + contents.get("xyzCode"),
								"" + contents.get("name"), "" + contents.get("desc"), "" + contents.get("version"),
								"" + contents.get("technology"), "" + contents.get("specialInstructions"),
								"" + contents.get("pckg"));
						exampleProjects.add(xmplProject);
					}
				});
		for(XmplProject xmplProject:exampleProjects){
			
		}
	}

	public List<XmplProject> getExampleProjects() {
		return exampleProjects;
	}

}
